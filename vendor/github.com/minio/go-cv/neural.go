package gocv

// ingroup neural
//SimdNeuralConvert(const uint8_t * src, size_t stride, size_t width, size_t height, float * dst, int inversion)
//SimdNeuralSigmoid(const float * src, size_t size, const float * slope, float * dst)
//SimdNeuralRoughSigmoid(const float * src, size_t size, const float * slope, float * dst)
//SimdNeuralRoughSigmoid2(const float * src, size_t size, const float * slope, float * dst)
//SimdNeuralDerivativeSigmoid(const float * src, size_t size, const float * slope, float * dst)
//SimdNeuralTanh(const float * src, size_t size, const float * slope, float * dst)
//SimdNeuralRoughTanh(const float * src, size_t size, const float * slope, float * dst)
//SimdNeuralDerivativeTanh(const float * src, size_t size, const float * slope, float * dst)
//SimdNeuralRelu(const float * src, size_t size, const float * slope, float * dst)
//SimdNeuralDerivativeRelu(const float * src, size_t size, const float * slope, float * dst)
//SimdNeuralProductSum(const float * a, const float * b, size_t size, float * sum)
//SimdNeuralAddVectorMultipliedByValue(const float * src, size_t size, const float * value, float * dst)
//SimdNeuralUpdateWeights(const float * x, size_t size, const float * a, const float * b, float * d, float * w)
//SimdNeuralAdaptiveGradientUpdate(const float * delta, size_t size, size_t batch, const float * alpha, const float * epsilon, float * gradient, float * weight)
//SimdNeuralAddConvolution3x3(const float * src, size_t srcStride, size_t width, size_t height, const float * weights, float * dst, size_t dstStride)
//SimdNeuralAddConvolution5x5(const float * src, size_t srcStride, size_t width, size_t height, const float * weights, float * dst, size_t dstStride)
//SimdNeuralAddConvolution3x3Back(const float * src, size_t srcStride, size_t width, size_t height, const float * weights, float * dst, size_t dstStride)
//SimdNeuralAddConvolution5x5Back(const float * src, size_t srcStride, size_t width, size_t height, const float * weights, float * dst, size_t dstStride)
//SimdNeuralAddConvolution3x3Sum(const float * src, size_t srcStride, const float * dst, size_t dstStride, size_t width, size_t height, float * sums)
//SimdNeuralAddConvolution5x5Sum(const float * src, size_t srcStride, const float * dst, size_t dstStride, size_t width, size_t height, float * sums)
//SimdNeuralMax2x2(const float * src, size_t srcStride, size_t width, size_t height, float * dst, size_t dstStride)
